
syntax = "proto3";

import "common.proto";
import "orders.proto";

package txncb;


message TxnConfirmState {
    repeated string signatures =1;
    ConfirmTradeKind kind = 2;
    uint64 slot = 3;
}

message LandedTxnState {
    oneof state_type {
        Failed failed = 1;
        Confirmed confirmed = 2;
        Lost lost =3;
    }
}

message Lost {
    repeated string signatures =1;
}

message Failed {
    int32 slot_diff = 1;
    TxnTips tips = 2;
    uint32 cu = 3;
    string err = 4;
    string signature =5;
    common.ProcKind proc =6;
}

message Confirmed {
    int32 slot_diff = 1;
    repeated ParsedTrade trades = 2;
    TxnTips tips = 3;
    uint32 cu = 4;
    string signature =5;
    common.ProcKind proc =6;
}

message ParsedTrade {
    oneof trade_type {
        Buy buy = 1;
        Sell sell = 2;
    }
}

message Buy {
    string mint = 1;
    string ticker = 2;
    uint64 base = 3;
    uint64 quote = 4;
    optional string mc = 5;
    optional string price = 6;
    common.QuoteKind qoute_kind =7;
    uint32 base_dec = 8;
}

message Sell {
    string mint = 1;
    string ticker = 2;
    uint64 base = 3;
    uint64 quote = 4;
    optional string pnl = 5;
    optional string mc = 6;
    optional string price = 7;
    uint32 base_dec = 8;
    common.QuoteKind qoute_kind =9;
}



message TxnTips {
    uint64 priority = 1;
    uint64 jito = 2;
}

message TransactionError {
    string message = 1;
}



message ConfirmTradeKind {
  oneof kind {
    Limit limit_order = 1;
    Swap swap = 2;
    Migration migration = 3;
    Dev dev = 4;
    Copytrade copytrade = 5;

  }
}

message Limit {
  string mint = 1;
  optional string ticker =2;
  optional string supply_dec = 3;
  orders.ApiOrder order = 4;
}

message Swap {
  string mint = 1;
  optional string ticker =2;
  TradeKind trade_ty = 3;
}

message Migration {
  string mint = 1;
  optional string ticker =2;
  TradeKind trade_ty = 3;
}

message Dev {
  string mint = 1;
  optional string ticker =2;
  TradeKind trade_ty = 3;
  string txn_sig =4;
}

message Copytrade {
  string mint = 1;
  optional string ticker= 2;
  int64 id = 3;
  string config_name = 4;
  string wallet = 5;
  string tx_sig = 6;
  string amount = 7;
  TradeKind trade_ty = 8;
}


enum TradeKind {
  SELL = 0;
  BUY = 1;
}